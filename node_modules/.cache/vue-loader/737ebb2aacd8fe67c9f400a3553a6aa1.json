{"remainingRequest":"/Users/gilang/Documents/LOCALHOST/frontend-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gilang/Documents/LOCALHOST/frontend-test/src/components/styledinput/styledinput.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/gilang/Documents/LOCALHOST/frontend-test/src/components/styledinput/styledinput.vue","mtime":1570622020066},{"path":"/Users/gilang/Documents/LOCALHOST/frontend-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gilang/Documents/LOCALHOST/frontend-test/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/gilang/Documents/LOCALHOST/frontend-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gilang/Documents/LOCALHOST/frontend-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Prop, Watch } from \"vue-property-decorator\";\n\n@Component({})\nexport default class StyledInput extends Vue {\n  @Prop({ default: \"text\" })\n  public type!: string;\n\n  @Prop({ default: \"\" })\n  public value: any;\n\n  @Prop({ default: \"\" })\n  public placeholder?: string;\n\n  private localValue: any;\n\n  @Watch(\"value\")\n  watchValue(oldval: any, newval: any) {\n    this.localValue = newval;\n  }\n}\n",{"version":3,"sources":["styledinput.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","file":"styledinput.vue","sourceRoot":"src/components/styledinput","sourcesContent":["<template>\n  <div class=\"styled-input\">\n    <button class=\"button styled-input__button\">\n      <img src=\"../../assets/images/icons/magny1@2x.png\" alt=\"\">\n    </button>\n    <input class=\"styled-input__field\" :value=\"localValue\" :type=\"type\" :placeholder=\"placeholder\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue, Prop, Watch } from \"vue-property-decorator\";\n\n@Component({})\nexport default class StyledInput extends Vue {\n  @Prop({ default: \"text\" })\n  public type!: string;\n\n  @Prop({ default: \"\" })\n  public value: any;\n\n  @Prop({ default: \"\" })\n  public placeholder?: string;\n\n  private localValue: any;\n\n  @Watch(\"value\")\n  watchValue(oldval: any, newval: any) {\n    this.localValue = newval;\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  @import \"styledinput\";\n</style>\n"]}]}